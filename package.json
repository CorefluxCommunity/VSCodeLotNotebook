{
	"name": "vscode-lot-notebooks",
	"displayName": "LOT Notebooks",
	"description": "Coreflux VS Code Notebooks for LOT language, leveraging making data-driven systems",
	"version": "0.3.1",
	"publisher": "Coreflux",
	"engines": {
		"vscode": "^1.85.0"
	},
	"icon": "images/logo.png",
	"categories": [
		"Notebooks"
	],
	"activationEvents": [
		"onNotebook:lot-notebook",
		"onLanguage:lot",
		"onLanguage:scl",
		"onCommand:lot-notebook.create",
		"onCommand:lot-notebook.new",
		"onView:corefluxEntitiesView"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"menus": {
			"commandPalette": [],
			"editor/title": [],
			"view/title": [],
			"view/item/context": [
				{
					"command": "corefluxEntities.copyCode",
					"group": "1_modification@1"
				},
				{
					"command": "coreflux.createEntityDefinition",
					"group": "1_modification@2"
				},
				{
					"command": "coreflux.updateCellFromMqtt",
					"group": "1_modification@3"
				},
				{
					"command": "coreflux.runEntityCell",
					"group": "1_modification@4"
				},
				{
					"command": "coreflux.removeEntity",
					"group": "9_modification@1"
				},
				{
					"command": "corefluxEntities.viewDescription",
					"when": "viewId == corefluxEntitiesView && viewItem == corefluxEntityDescriptionItem",
					"group": "inline"
				}
			],
			"notebook/toolbar": [
				{
					"command": "lot.openChatbot",
					"group": "navigation",
					"when": "notebookType == lot-notebook && config.lotNotebook.experimentalFeatures.anselmoChatbot"
				}
			],
			"notebook/cell/context": [
				{
					"command": "lot-notebook.explainCell",
					"group": "navigation",
					"when": "notebookType == lot-notebook && notebookCellType == code && config.lotNotebook.experimentalFeatures.anselmoChatbot"
				}
			]
		},
		"views": {
			"explorer": [
				{
					"id": "corefluxEntitiesView",
					"name": "Coreflux Entities",
					"icon": "images/CF_icon.svg",
					"contextualTitle": "Coreflux Entities"
				}
			]
		},
		"commands": [
			{
				"command": "lot-notebook.create",
				"title": "New LOT Notebook",
				"category": "LOT Notebook"
			},
			{
				"command": "lot-notebook.changeCredentials",
				"title": "Change MQTT Broker Credentials",
				"category": "LOT Notebook"
			},
			{
				"command": "lot.openTopicPayload",
				"title": "Edit Topic Payload",
				"category": "LOT Notebook"
			},
			{
				"command": "lot.openChatbot",
				"title": "ü§ñ Anselmo ChatBot (beta preview)",
				"category": "LOT Notebook"
			},
			{
				"command": "corefluxEntities.refresh",
				"title": "Refresh",
				"category": "Coreflux",
				"icon": "$(refresh)"
			},
			{
				"command": "corefluxEntities.copyCode",
				"title": "üìã Copy Code",
				"category": "Coreflux"
			},
			{
				"command": "corefluxEntities.viewDescription",
				"title": "View Description",
				"category": "Coreflux"
			},
			{
				"command": "coreflux.removeAllModels",
				"title": "Remove All Models",
				"category": "Coreflux"
			},
			{
				"command": "coreflux.removeAllActions",
				"title": "Remove All Actions",
				"category": "Coreflux"
			},
			{
				"command": "coreflux.removeAllRoutes",
				"title": "Remove All Routes",
				"category": "Coreflux"
			},
			{
				"command": "coreflux.removeEntity",
				"title": "üóëÔ∏è Remove Entity from Coreflux",
				"category": "Coreflux"
			},
			{
				"command": "coreflux.createEntityDefinition",
				"title": "‚ú® Create Definition in Notebook",
				"category": "Coreflux"
			},
			{
				"command": "coreflux.updateCellFromMqtt",
				"title": "üíæ Update Cell from Coreflux",
				"category": "Coreflux"
			},
			{
				"command": "coreflux.runEntityCell",
				"title": "‚ö° Update Coreflux from Cell",
				"category": "Coreflux"
			},
			{
				"command": "lot-notebook.explainCell",
				"title": "Explain Language Of Things Cell with Anselmo",
				"category": "Language Of Things"
			},
			{
				"command": "lot-notebook.enableExperimentalFeatures",
				"title": "Enable Experimental Features",
				"category": "LOT Notebook"
			},
			{
				"command": "lot-notebook.disableExperimentalFeatures",
				"title": "Disable Experimental Features",
				"category": "LOT Notebook"
			},
			{
				"command": "lot-notebook.new",
				"title": "LOT Notebook: New LOT Notebook",
				"category": "LOT Notebook"
			},
			{
				"command": "coreflux.openWalkthrough",
				"title": "Open Getting Started Walkthrough",
				"category": "Coreflux"
			},
			{
				"command": "coreflux.createMarkdownFile",
				"title": "Create Markdown Documentation",
				"category": "Coreflux"
			},
			{
				"command": "coreflux.connectBroker",
				"title": "Connect to MQTT Broker",
				"category": "Coreflux"
			},
			{
				"command": "coreflux.createTimerAction",
				"title": "Create Timer Action",
				"category": "Coreflux"
			},
			{
				"command": "coreflux.uploadAction",
				"title": "Upload Action to Broker",
				"category": "Coreflux"
			},
			{
				"command": "coreflux.createModel",
				"title": "Create Data Model",
				"category": "Coreflux"
			},
			{
				"command": "coreflux.createModelAction",
				"title": "Create Model Action",
				"category": "Coreflux"
			},
			{
				"command": "coreflux.createDockerSetup",
				"title": "Create Docker Setup",
				"category": "Coreflux"
			},
			{
				"command": "coreflux.setupGitRepo",
				"title": "Setup Git Repository",
				"category": "Coreflux"
			},
			{
				"command": "coreflux.createPythonScripts",
				"title": "Create Python Scripts",
				"category": "Coreflux"
			},
			{
				"command": "coreflux.testTelemetry",
				"title": "Test Telemetry Connection",
				"category": "Coreflux"
			}
		],
		"viewsWelcome": [
			{
				"view": "corefluxEntities",
				"contents": "Welcome to Coreflux! Get started by creating your first LOT notebook.\n\n[Create LOT Notebook](command:lot-notebook.new)\n\n[Open Getting Started Guide](command:coreflux.openWalkthrough)\n\nLearn more about [Language of Things](https://docs.coreflux.org/lot)."
			}
		],
		"notebooks": [
			{
				"id": "lot-notebook",
				"type": "lot-notebook",
				"displayName": "LOT Notebook",
				"selector": [
					{
						"filenamePattern": "*.lotnb"
					}
				]
			}
		],
		"notebookRenderer": [
			{
				"id": "lotTreeRenderer",
				"displayName": "LOT Tree Renderer",
				"entrypoint": "./dist/renderer/treeRenderer.js",
				"mimeTypes": [
					"application/lot-tree+json"
				]
			},
			{
				"id": "lotShellRenderer",
				"displayName": "LOT Shell Renderer",
				"entrypoint": "./dist/renderer/shellRenderer.js",
				"mimeTypes": [
					"application/lot-shell+json"
				]
			}
		],
		"iconThemes": [
			{
				"id": "lot-icon-theme",
				"label": "LOT Icon Theme",
				"path": "./lot-icon-theme.json"
			}
		],
		"languages": [
			{
				"id": "lot",
				"aliases": [
					"LOT",
					"lot"
				],
				"extensions": [
					".lot",
					".cf"
				],
				"configuration": "./language-configuration.json"
			},
			{
				"id": "shellscript",
				"aliases": [
					"Shell Script",
					"Bash",
					"shellscript",
					"sh",
					"bash"
				],
				"extensions": [
					".sh"
				]
			},
			{
				"id": "terminal",
				"aliases": [
					"Terminal",
					"Command",
					"cmd",
					"powershell",
					"sh",
					"bash"
				],
				"extensions": []
			}
		],
		"grammars": [
			{
				"language": "lot",
				"scopeName": "source.lot",
				"path": "./syntaxes/lot.tmLanguage.json"
			},
			{
				"language": "terminal",
				"scopeName": "source.terminal",
				"path": "./syntaxes/terminal.tmLanguage.json"
			}
		],
		"configuration": {
			"title": "Coreflux",
			"properties": {
				"coreflux.telemetryEnabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Enable anonymous telemetry to help improve the extension. [Privacy Policy](https://docs.coreflux.org/privacy)",
					"scope": "application"
				},
				"lotNotebook.experimentalFeatures": {
					"type": "object",
					"title": "Experimental Features",
					"description": "Enable experimental features that are still in development",
					"properties": {
						"anselmoChatbot": {
							"type": "boolean",
							"default": false,
							"description": "Enable Anselmo ChatBot (experimental AI assistant for LOT notebooks)"
						}
					}
				}
			}
		},
		"walkthroughs": [
			{
				"id": "coreflux.onboarding",
				"title": "Get Started with Coreflux",
				"description": "Learn how to build IoT solutions with Language of Things (LOT)",
				"steps": [
					{
						"id": "create-lot-notebook",
						"title": "Create your first LOT notebook file",
						"description": "Start by creating a .lotnb file to begin working with Language of Things.\n\n[Create LOT Notebook](command:lot-notebook.new)",
						"media": {
							"image": "media/walkthrough/create-notebook.png",
							"altText": "Creating a new LOT notebook"
						},
						"completionEvents": [
							"onCommand:lot-notebook.new"
						]
					},
					{
						"id": "create-markdown-file",
						"title": "Add walkthrough explanation",
						"description": "Add a markdown cell with detailed explanation of the walkthrough and what you'll build.\n\n[Add Walkthrough Guide](command:coreflux.createMarkdownFile)",
						"media": {
							"image": "media/walkthrough/create-markdown.png",
							"altText": "Adding walkthrough explanation to notebook"
						},
						"completionEvents": [
							"onCommand:coreflux.createMarkdownFile"
						]
					},
					{
						"id": "connect-broker",
						"title": "Connect to your broker",
						"description": "Establish a connection to an MQTT broker to start publishing data.\n\n[Connect to Broker](command:coreflux.connectBroker)",
						"media": {
							"image": "media/walkthrough/connect-broker.png",
							"altText": "Connecting to MQTT broker"
						},
						"completionEvents": [
							"onCommand:coreflux.connectBroker"
						]
					},
					{
						"id": "create-timer-action",
						"title": "Create an Action that runs every 1 second",
						"description": "Build your first automated action with a timer trigger.\n\n[Create Timer Action](command:coreflux.createTimerAction)",
						"media": {
							"image": "media/walkthrough/timer-action.png",
							"altText": "Creating a timer-based action"
						},
						"completionEvents": [
							"onCommand:coreflux.createTimerAction"
						]
					},
					{
						"id": "upload-action",
						"title": "Upload the Action to the broker",
						"description": "Deploy your action to the MQTT broker for execution.\n\n[Upload Action](command:coreflux.uploadAction)",
						"media": {
							"image": "media/walkthrough/upload-action.png",
							"altText": "Uploading action to broker"
						},
						"completionEvents": [
							"onCommand:coreflux.uploadAction"
						]
					},
					{
						"id": "create-model",
						"title": "Create a MODEL",
						"description": "Define a data model to structure your IoT information.\n\n[Create Model](command:coreflux.createModel)",
						"media": {
							"image": "media/walkthrough/create-model.png",
							"altText": "Creating a data model"
						},
						"completionEvents": [
							"onCommand:coreflux.createModel"
						]
					},
					{
						"id": "create-model-action",
						"title": "Create an Action that publishes the MODEL",
						"description": "Build an action that publishes data using your model structure.\n\n[Create Model Action](command:coreflux.createModelAction)",
						"media": {
							"image": "media/walkthrough/model-action.png",
							"altText": "Creating an action that uses a model"
						},
						"completionEvents": [
							"onCommand:coreflux.createModelAction"
						]
					},
					{
						"id": "create-python-scripts",
						"title": "Add basic Python scripts",
						"description": "Create reusable Python functions that can be called from your LOT actions.\n\n[Create Python Scripts](command:coreflux.createPythonScripts)",
						"media": {
							"image": "media/walkthrough/python-scripts.png",
							"altText": "Creating Python scripts"
						},
						"completionEvents": [
							"onCommand:coreflux.createPythonScripts"
						]
					},
					{
						"id": "create-docker-compose",
						"title": "Create a shell script with Docker Compose",
						"description": "Set up a complete local development environment.\n\n[Create Docker Setup](command:coreflux.createDockerSetup)",
						"media": {
							"image": "media/walkthrough/docker-compose.png",
							"altText": "Setting up Docker Compose"
						},
						"completionEvents": [
							"onCommand:coreflux.createDockerSetup"
						]
					},
					{
						"id": "upload-to-github",
						"title": "Upload the project to GitHub",
						"description": "Share your LOT project with version control.\n\n[Setup Git Repository](command:coreflux.setupGitRepo)",
						"media": {
							"image": "media/walkthrough/github-upload.png",
							"altText": "Uploading to GitHub"
						},
						"completionEvents": [
							"onCommand:coreflux.setupGitRepo"
						]
					}
				]
			}
		],
		"notebookCellLanguages": [
			"lot",
			"scl",
			"markdown",
			"bash",
			"shellscript",
			"terminal",
			"python"
		]
	},
	"scripts": {
		"compile:extension": "tsc --project tsconfig.json",
		"compile:renderer": "tsc --project tsconfig.renderer.json",
		"compile": "npm run compile:extension && npm run compile:renderer",
		"watch": "tsc --watch --project tsconfig.json",
		"package": "npm run compile",
		"lint": "eslint src --ext ts"
	},
	"devDependencies": {
		"@types/node": "14.x",
		"@types/node-fetch": "^2.6.12",
		"@types/uuid": "^9.0.8",
		"@types/vscode": "^1.85.0",
		"@typescript-eslint/eslint-plugin": "^5.58.0",
		"@typescript-eslint/parser": "^5.58.0",
		"copy-webpack-plugin": "^13.0.0",
		"eslint": "^8.0.0",
		"ts-loader": "^9.2.2",
		"typescript": "^4.8.4"
	},
	"dependencies": {
		"@types/vscode-notebook-renderer": "^1.72.3",
		"ansi-to-html": "^0.7.2",
		"markdown-it": "^14.1.0",
		"mermaid": "^10.9.0",
		"mqtt": "^5.10.3",
		"node-fetch": "^3.3.2",
		"tree-kill": "^1.2.2",
		"uuid": "^9.0.1"
	},
	"extensionDependencies": []
}
